// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace InvoiceNinjaClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Company
    {
        /// <summary>
        /// Initializes a new instance of the Company class.
        /// </summary>
        public Company()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Company class.
        /// </summary>
        /// <param name="id">The company hash id</param>
        /// <param name="sizeId">The company size ID</param>
        /// <param name="industryId">The company industry ID</param>
        /// <param name="slackWebhookUrl">The slack webhook notification
        /// URL</param>
        /// <param name="googleAnalyticsKey">The google analytics key</param>
        /// <param name="portalMode">Determines the client facing urls ie:
        /// subdomain,domain,iframe</param>
        /// <param name="subdomain">Specifies the first part of the company
        /// domain ie acme in acme.domain.com</param>
        /// <param name="portalDomain">The fully qualified domain for client
        /// facing URLS</param>
        /// <param name="enabledTaxRates">Number of taxes rates used per
        /// entity</param>
        /// <param name="fillProducts">Toggles filling a product description
        /// based on product key</param>
        /// <param name="convertProducts">___________</param>
        /// <param name="updateProducts">Toggles updating a product description
        /// which description changes</param>
        /// <param name="showProductDetails">Toggles showing a product
        /// description which description changes</param>
        /// <param name="customFields">Custom fields map</param>
        /// <param name="enableProductCost">______________</param>
        /// <param name="enableProductQuantity">______________</param>
        /// <param name="defaultQuantity">______________</param>
        /// <param name="customSurchargeTaxes1">Toggles charging taxes on
        /// custom surcharge amounts</param>
        /// <param name="customSurchargeTaxes2">Toggles charging taxes on
        /// custom surcharge amounts</param>
        /// <param name="customSurchargeTaxes3">Toggles charging taxes on
        /// custom surcharge amounts</param>
        /// <param name="customSurchargeTaxes4">Toggles charging taxes on
        /// custom surcharge amounts</param>
        /// <param name="logo">The company logo - binary</param>
        public Company(string id = default(string), string sizeId = default(string), string industryId = default(string), string slackWebhookUrl = default(string), string googleAnalyticsKey = default(string), string portalMode = default(string), string subdomain = default(string), string portalDomain = default(string), int? enabledTaxRates = default(int?), bool? fillProducts = default(bool?), bool? convertProducts = default(bool?), bool? updateProducts = default(bool?), bool? showProductDetails = default(bool?), object customFields = default(object), bool? enableProductCost = default(bool?), bool? enableProductQuantity = default(bool?), bool? defaultQuantity = default(bool?), bool? customSurchargeTaxes1 = default(bool?), bool? customSurchargeTaxes2 = default(bool?), bool? customSurchargeTaxes3 = default(bool?), bool? customSurchargeTaxes4 = default(bool?), object logo = default(object), CompanySettings settings = default(CompanySettings))
        {
            Id = id;
            SizeId = sizeId;
            IndustryId = industryId;
            SlackWebhookUrl = slackWebhookUrl;
            GoogleAnalyticsKey = googleAnalyticsKey;
            PortalMode = portalMode;
            Subdomain = subdomain;
            PortalDomain = portalDomain;
            EnabledTaxRates = enabledTaxRates;
            FillProducts = fillProducts;
            ConvertProducts = convertProducts;
            UpdateProducts = updateProducts;
            ShowProductDetails = showProductDetails;
            CustomFields = customFields;
            EnableProductCost = enableProductCost;
            EnableProductQuantity = enableProductQuantity;
            DefaultQuantity = defaultQuantity;
            CustomSurchargeTaxes1 = customSurchargeTaxes1;
            CustomSurchargeTaxes2 = customSurchargeTaxes2;
            CustomSurchargeTaxes3 = customSurchargeTaxes3;
            CustomSurchargeTaxes4 = customSurchargeTaxes4;
            Logo = logo;
            Settings = settings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the company hash id
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the company size ID
        /// </summary>
        [JsonProperty(PropertyName = "size_id")]
        public string SizeId { get; set; }

        /// <summary>
        /// Gets or sets the company industry ID
        /// </summary>
        [JsonProperty(PropertyName = "industry_id")]
        public string IndustryId { get; set; }

        /// <summary>
        /// Gets or sets the slack webhook notification URL
        /// </summary>
        [JsonProperty(PropertyName = "slack_webhook_url")]
        public string SlackWebhookUrl { get; set; }

        /// <summary>
        /// Gets or sets the google analytics key
        /// </summary>
        [JsonProperty(PropertyName = "google_analytics_key")]
        public string GoogleAnalyticsKey { get; set; }

        /// <summary>
        /// Gets or sets determines the client facing urls ie:
        /// subdomain,domain,iframe
        /// </summary>
        [JsonProperty(PropertyName = "portal_mode")]
        public string PortalMode { get; set; }

        /// <summary>
        /// Gets or sets specifies the first part of the company domain ie acme
        /// in acme.domain.com
        /// </summary>
        [JsonProperty(PropertyName = "subdomain")]
        public string Subdomain { get; set; }

        /// <summary>
        /// Gets or sets the fully qualified domain for client facing URLS
        /// </summary>
        [JsonProperty(PropertyName = "portal_domain")]
        public string PortalDomain { get; set; }

        /// <summary>
        /// Gets or sets number of taxes rates used per entity
        /// </summary>
        [JsonProperty(PropertyName = "enabled_tax_rates")]
        public int? EnabledTaxRates { get; set; }

        /// <summary>
        /// Gets or sets toggles filling a product description based on product
        /// key
        /// </summary>
        [JsonProperty(PropertyName = "fill_products")]
        public bool? FillProducts { get; set; }

        /// <summary>
        /// Gets or sets ___________
        /// </summary>
        [JsonProperty(PropertyName = "convert_products")]
        public bool? ConvertProducts { get; set; }

        /// <summary>
        /// Gets or sets toggles updating a product description which
        /// description changes
        /// </summary>
        [JsonProperty(PropertyName = "update_products")]
        public bool? UpdateProducts { get; set; }

        /// <summary>
        /// Gets or sets toggles showing a product description which
        /// description changes
        /// </summary>
        [JsonProperty(PropertyName = "show_product_details")]
        public bool? ShowProductDetails { get; set; }

        /// <summary>
        /// Gets or sets custom fields map
        /// </summary>
        [JsonProperty(PropertyName = "custom_fields")]
        public object CustomFields { get; set; }

        /// <summary>
        /// Gets or sets ______________
        /// </summary>
        [JsonProperty(PropertyName = "enable_product_cost")]
        public bool? EnableProductCost { get; set; }

        /// <summary>
        /// Gets or sets ______________
        /// </summary>
        [JsonProperty(PropertyName = "enable_product_quantity")]
        public bool? EnableProductQuantity { get; set; }

        /// <summary>
        /// Gets or sets ______________
        /// </summary>
        [JsonProperty(PropertyName = "default_quantity")]
        public bool? DefaultQuantity { get; set; }

        /// <summary>
        /// Gets or sets toggles charging taxes on custom surcharge amounts
        /// </summary>
        [JsonProperty(PropertyName = "custom_surcharge_taxes1")]
        public bool? CustomSurchargeTaxes1 { get; set; }

        /// <summary>
        /// Gets or sets toggles charging taxes on custom surcharge amounts
        /// </summary>
        [JsonProperty(PropertyName = "custom_surcharge_taxes2")]
        public bool? CustomSurchargeTaxes2 { get; set; }

        /// <summary>
        /// Gets or sets toggles charging taxes on custom surcharge amounts
        /// </summary>
        [JsonProperty(PropertyName = "custom_surcharge_taxes3")]
        public bool? CustomSurchargeTaxes3 { get; set; }

        /// <summary>
        /// Gets or sets toggles charging taxes on custom surcharge amounts
        /// </summary>
        [JsonProperty(PropertyName = "custom_surcharge_taxes4")]
        public bool? CustomSurchargeTaxes4 { get; set; }

        /// <summary>
        /// Gets or sets the company logo - binary
        /// </summary>
        [JsonProperty(PropertyName = "logo")]
        public object Logo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "settings")]
        public CompanySettings Settings { get; set; }

    }
}
